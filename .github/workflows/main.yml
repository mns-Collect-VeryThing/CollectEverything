name: Collect&Verything CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest
    
    permissions:
      packages: write
      contents: read
      
    steps:
    - uses: actions/checkout@v4
      
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      
    - name: Build the Gateway Docker image
      run: docker build . --file gateway/CollectEverything.Gateway/Dockerfile --tag gateway:dev
    - name: Push the Gateway Docker image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/gateway
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [ [ "${{ github.ref }}" == "refs/tags/"* ] ] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag gateway:dev $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        
    - name: Build the AuthServer Docker image
      run: docker build . --file apps/CollectEverything.AuthServer/Dockerfile --tag authserver:dev
    - name: Push the AuthServer Docker image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/authserver
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [ [ "${{ github.ref }}" == "refs/tags/"* ] ] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag authserver:dev $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        
    - name: Build the Administration Docker image
      run: docker build . --file services/administration/host/CollectEverything.Administration.HttpApi.Host/Dockerfile --tag administration:dev
    - name: Push the Administration Docker image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/administration
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [ [ "${{ github.ref }}" == "refs/tags/"* ] ] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag administration:dev $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
    
    - name: Build the IdentityService Docker image
      run: docker build . --file services/identity/host/CollectEverything.IdentityService.HttpApi.Host/Dockerfile --tag identityservice:dev
    - name: Push the IdentityService Docker image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/identityservice
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [ [ "${{ github.ref }}" == "refs/tags/"* ] ] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag identityservice:dev $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
      
    - name: Build the SaaS Docker image
      run: docker build . --file services/saas/host/CollectEverything.SaaS.HttpApi.Host/Dockerfile --tag saas:dev
    - name: Push the SaaS Docker image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/saas
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [ [ "${{ github.ref }}" == "refs/tags/"* ] ] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag saas:dev $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        
    - name: Build the DbMigrator Docker image
      run: docker build . --file shared/CollectEverything.DbMigrator/Dockerfile --tag dbmigrator:dev
    - name: Push the DbMigrator Docker image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/dbmigrator
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [ [ "${{ github.ref }}" == "refs/tags/"* ] ] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag dbmigrator:dev $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        
    - name: Build the Front Blazor Docker image
      run: docker build . --file apps/CollectEverything.Blazor/Dockerfile --tag frontblazor:dev
    - name: Push the Front Blazor Docker image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/frontblazor
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [ [ "${{ github.ref }}" == "refs/tags/"* ] ] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag frontblazor:dev $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION